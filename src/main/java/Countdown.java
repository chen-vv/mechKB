import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Countdown implements ActionListener {
    JButton resetButton = new JButton("Start");
    JLabel timeLabel = new JLabel();
    mechKB frame = null;

    int seconds = 0;
    boolean started = false;
    private int elapsedTime = 0;
    private int minutes = 1;
    private static final int MILLIS = 1000;
    private String seconds_string = String.format("%02d", seconds);
    private String minutes_string = String.format("%1d", minutes);

    Timer timer = new Timer(1000, e -> {
        elapsedTime += MILLIS;

        if (elapsedTime > 0 && elapsedTime < 60 * MILLIS) {
            seconds = 60 - (elapsedTime / MILLIS);
            if (minutes == 1) {
                --minutes;
            }
        } else {
            seconds = 0;
        }

        seconds_string = String.format("%02d", seconds);
        minutes_string = String.format("%1d", minutes);
        timeLabel.setText(minutes_string + ":" + seconds_string);
    });

    /**
     * Creates an instance of Countdown, which consists of a countdown timer
     * starting from one minute, and a button which starts or resets the
     * countdown when clicked
     */
    Countdown() {
        timeLabel.setText(minutes_string + ":" + seconds_string);
        timeLabel.setFont(new Font("Segoe UI", Font.PLAIN, 20));
        timeLabel.setOpaque(true);
        timeLabel.setHorizontalAlignment(JTextField.CENTER);

        resetButton.setFont(new Font("Segoe UI", Font.PLAIN, 20));
        resetButton.setBackground(Color.black);
        resetButton.setForeground(Color.pink);
        resetButton.setContentAreaFilled(false);
        resetButton.setOpaque(true);
        resetButton.setFocusable(false);
        resetButton.addActionListener(this);
    }

    /**
     *
     * @param e event generated by a component when a component-specific action occurs
     *          (such as a mouse click on a Button)
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == resetButton) {
            if (started) {
                resetButton.setText("Start");
                reset();
                frame.restart();
            }
            else {
                resetButton.setText("Reset");
                timer.start();
            }

            started = !started;
        }
    }

    void reset() {
        timer.stop();
        elapsedTime = 0;
        seconds = 0;
        minutes = 1;
        seconds_string = String.format("%02d", seconds);
        minutes_string = String.format("%1d", minutes);
        timeLabel.setText(minutes_string + ":" + seconds_string);
    }
}
